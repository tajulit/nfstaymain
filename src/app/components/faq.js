'use client'
import { useState } from "react";
import Masonry,{ ResponsiveMasonry } from "react-responsive-masonry";

export const Li = ({ faq }) => {
    const [open, setOpen] = useState(false)

    return (
        <div className=" flex flex-col w-full h-fit bg-white p-3 rounded-lg shadow">
            <button
                className="relative flex gap-2 border-none outline-none items-center w-full text-base font-semibold text-left 2xl:text-xl  border-base-content/10"
                aria-expanded={open ? "true" : "false"}
                onClick={() => setOpen(prev => !prev)}
            >
                <span className="flex-1 text-inherit">{faq.question}</span>
                <svg
                    className="flex-shrink-0 w-4 h-4 ml-auto fill-current"
                    viewBox="0 0 16 16"

                    xmlns="http://www.w3.org/2000/svg"
                >
                    <rect
                        y="7"
                        width="16"
                        height="2"
                        fill="url(#paint0_linear_1_2377)"

                        rx="1"
                        className={`transform origin-center transition duration-200 ease-out ${open ? "-rotate-45" : "rotate-0"
                            }`}
                    ></rect>
                    <rect
                        y="7"
                        width="16"
                        height="2"
                        rx="1"
                        fill="url(#paint1_linear_1_2377)"
                        className={`transform origin-center transition duration-200 ease-out ${open ? "rotate-45" : "rotate-90"
                            }`}
                    ></rect>
                    <defs>
                        <linearGradient id="paint0_linear_1_2377" x1="9.61992e-07" y1="-4.58339" x2="22.318" y2="-4.31372" gradientUnits="userSpaceOnUse">
                            <stop stop-color="#9945FF" />
                            <stop offset="1" stop-color="#20E19F" />
                        </linearGradient>
                        <linearGradient id="paint1_linear_1_2377" x1="9.61992e-07" y1="-4.58339" x2="22.318" y2="-4.31372" gradientUnits="userSpaceOnUse">
                            <stop stop-color="#9945FF" />
                            <stop offset="1" stop-color="#20E19F" />
                        </linearGradient>
                    </defs>
                </svg>
            </button>
            <div
                className="transition-all duration-300 ease-in-out max-h-0 overflow-hidden"
                style={{
                    maxHeight: open ? "500px" : "0",
                    marginTop: open ? "10px" : "0",
                    transition: "all 0.3s ease-in-out 0s",
                }}
            >
                <div className="pb-5 leading-relaxed">
                    <div className="space-y-2 font-medium leading-relaxed text-sm 2xl:text-lg">{faq.answer}</div>
                </div>
            </div>
        </div>
    )
}



const Faq = () => {


    const faqData = [
        {
            question: "What is fractional ownership, and how does it work?",
            answer:
                "Fractional ownership allows multiple investors to collectively own a portion of a property. Instead of purchasing an entire property yourself, you buy shares in a property, giving you proportional ownership. You’ll earn a share of the rental income and potential capital gains based on the number of shares you hold.",
        },
        {
            question: "How do I buy shares in a property?",
            answer:
                "Buying shares is simple. First, sign up for an account on our platform, browse the available properties, and choose the one you want to invest in. You can invest as little as $1,000, and the entire process is completed online in just a few minutes.",
        },
        {
            question: "How do I earn money from my shares?",
            answer:
                "As a fractional owner, you will receive a portion of the rental income generated by the property each month. Your earnings are proportional to the number of shares you own. You can either withdraw your rent or reinvest it for future growth.",
        },
        {
            question: "Is this a passive investment opportunity?",
            answer:
                "No, this is an active partnership. As a shareholder, you are required to participate in the decision-making process. This includes voting on important property management decisions. To receive your monthly rent, you must be KYC-verified and actively engage in at least one proposal each month.",
        },
        {
            question: "Can I sell my shares?",
            answer:
                "Yes, once you’ve purchased shares, you have the flexibility to sell them on our secondary marketplace. You can list your shares for sale at any time, and set your preferred price, and other users on the platform can purchase them.",
        },
        {
            question: "How long should I plan to hold my investment?",
            answer:
                "Our properties are typically long-term investments, but the holding period is up to you. You can choose to sell your shares at any time, or you can continue to hold them to earn ongoing rental income and potential appreciation.",
        },
    ];

    const [activeIndex, setActiveIndex] = useState(null);

    const toggleFAQ = (index) => {
        setActiveIndex(activeIndex === index ? null : index);
    };
    return (
        <div id="faq" className="flex flex-col gap-8 items-center p-4 py-12 my-8 w-full bg-[#F7F6FF]">
            <div className="flex items-center flex-col gap-5 self-center justify-center w-full max-w-[38rem] 2xl:max-w-[50rem]">
                <div className="flex flex-col items-center justify-center gap-2 text-center">
                    <h1 className="text-[32px] leading-[48px] text-center font-bold 2xl:text-5xl">
                        Frequently asked questions
                    </h1>
                    <p className="text-[18px] font-medium text-[rgba(11,8,36,0.53)] 2xl:text-lg">Feeling inquisitive? Have a read through some of our FAQs or contact our supporters for help</p>
                </div>
            </div>
            <div className="flex items-center justify-center w-full">



                <ResponsiveMasonry
                    columnsCountBreakPoints={{ 350: 1, 750: 2,}}
                    className="w-full h-full max-w-5xl 2xl:max-w-7xl"

                >
                    <Masonry
                        gutter="15px"
                    >
                        {faqData.map((faq, index) => (
                            // <li key={index} className=" flex flex-col w-full h-fit bg-white p-3 rounded-lg shadow">
                            //     <button
                            //         className="relative flex gap-2 border-none outline-none items-center w-full text-base font-semibold text-left  md:text-sm border-base-content/10"
                            //         aria-expanded={activeIndex === index ? "true" : "false"}
                            //         onClick={() => toggleFAQ(index)}
                            //     >
                            //         <span className="flex-1 text-base-content">{faq.question}</span>
                            //         <svg
                            //             className="flex-shrink-0 w-4 h-4 ml-auto fill-current"
                            //             viewBox="0 0 16 16"

                            //             xmlns="http://www.w3.org/2000/svg"
                            //         >
                            //             <rect
                            //                 y="7"
                            //                 width="16"
                            //                 height="2"
                            //                 fill="url(#paint0_linear_1_2377)"

                            //                 rx="1"
                            //                 className={`transform origin-center transition duration-200 ease-out ${activeIndex === index ? "rotate-0" : ""
                            //                     }`}
                            //             ></rect>
                            //             <rect
                            //                 y="7"
                            //                 width="16"
                            //                 height="2"
                            //                 rx="1"
                            //                 fill="url(#paint1_linear_1_2377)"
                            //                 className={`transform origin-center rotate-90 transition duration-200 ease-out ${activeIndex === index ? "rotate-0" : "rotate-90"
                            //                     }`}
                            //             ></rect>
                            //             <defs>
                            //                 <linearGradient id="paint0_linear_1_2377" x1="9.61992e-07" y1="-4.58339" x2="22.318" y2="-4.31372" gradientUnits="userSpaceOnUse">
                            //                     <stop stop-color="#9945FF" />
                            //                     <stop offset="1" stop-color="#20E19F" />
                            //                 </linearGradient>
                            //                 <linearGradient id="paint1_linear_1_2377" x1="9.61992e-07" y1="-4.58339" x2="22.318" y2="-4.31372" gradientUnits="userSpaceOnUse">
                            //                     <stop stop-color="#9945FF" />
                            //                     <stop offset="1" stop-color="#20E19F" />
                            //                 </linearGradient>
                            //             </defs>
                            //         </svg>
                            //     </button>
                            //     <div
                            //         className="transition-all duration-300 ease-in-out max-h-0 overflow-hidden"
                            //         style={{
                            //             maxHeight: activeIndex === index ? "500px" : "0",
                            //             marginTop: activeIndex === index ? "10px" : "0",
                            //             transition: "all 0.3s ease-in-out 0s",
                            //         }}
                            //     >
                            //         <div className="pb-5 leading-relaxed">
                            //             <div className="space-y-2 leading-relaxed text-xs">{faq.answer}</div>
                            //         </div>
                            //     </div>
                            // </li>
                            <Li key={index} faq={faq} />
                        ))}
                    </Masonry>
                </ResponsiveMasonry>






            </div>



        </div>
    )
}

export default Faq